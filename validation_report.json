{
  "validation_metadata": {
    "timestamp": 1755647248.1779099,
    "repo_path": ".",
    "python_version": "3.12.3 (main, Jun 18 2025, 17:59:45) [GCC 13.3.0]",
    "validation_duration_seconds": 3.7270379066467285
  },
  "file_structure": {
    "core_modules": {
      "hdc_robot_controller/core/hypervector.py": {
        "exists": true,
        "size_bytes": 12777,
        "last_modified": 1755646607.5888093
      },
      "hdc_robot_controller/core/operations.py": {
        "exists": true,
        "size_bytes": 11335,
        "last_modified": 1755646607.5888093
      },
      "hdc_robot_controller/core/memory.py": {
        "exists": true,
        "size_bytes": 20015,
        "last_modified": 1755646607.5888093
      }
    },
    "advanced_intelligence": {
      "hdc_robot_controller/advanced_intelligence/__init__.py": {
        "exists": true,
        "size_bytes": 737,
        "last_modified": 1755646607.584807
      },
      "hdc_robot_controller/advanced_intelligence/multi_modal_fusion.py": {
        "exists": true,
        "size_bytes": 52994,
        "last_modified": 1755646607.584807
      },
      "hdc_robot_controller/advanced_intelligence/quantum_hdc.py": {
        "exists": true,
        "size_bytes": 12941,
        "last_modified": 1755646607.5888093
      },
      "hdc_robot_controller/advanced_intelligence/neural_hdc_hybrid.py": {
        "exists": true,
        "size_bytes": 32665,
        "last_modified": 1755646607.584807
      },
      "hdc_robot_controller/advanced_intelligence/symbolic_reasoner.py": {
        "exists": true,
        "size_bytes": 34118,
        "last_modified": 1755646607.5888093
      },
      "hdc_robot_controller/advanced_intelligence/meta_learner.py": {
        "exists": true,
        "size_bytes": 32368,
        "last_modified": 1755646607.584807
      }
    },
    "autonomous_mastery": {
      "hdc_robot_controller/autonomous_mastery/__init__.py": {
        "exists": true,
        "size_bytes": 677,
        "last_modified": 1755646607.5888093
      },
      "hdc_robot_controller/autonomous_mastery/self_modifying_code.py": {
        "exists": true,
        "size_bytes": 34344,
        "last_modified": 1755646607.5888093
      },
      "hdc_robot_controller/autonomous_mastery/adaptive_architecture.py": {
        "exists": true,
        "size_bytes": 37581,
        "last_modified": 1755646607.5888093
      }
    },
    "tests": {
      "tests/test_advanced_intelligence.py": {
        "exists": true,
        "size_bytes": 26985,
        "last_modified": 1755646607.6048186
      },
      "tests/test_autonomous_mastery.py": {
        "exists": true,
        "size_bytes": 25294,
        "last_modified": 1755646607.6048186
      }
    },
    "configuration": {
      "pyproject.toml": {
        "exists": true,
        "size_bytes": 2571,
        "last_modified": 1755646607.596814
      },
      "requirements.txt": {
        "exists": true,
        "size_bytes": 199,
        "last_modified": 1755646607.6008162
      },
      "README.md": {
        "exists": true,
        "size_bytes": 29222,
        "last_modified": 1755646607.5808046
      }
    }
  },
  "syntax_validation": {
    "setup.py": {
      "syntax_valid": true,
      "lines_of_code": 206,
      "ast_nodes": 466,
      "functions": 3,
      "classes": 1,
      "imports": 6
    },
    "test_comprehensive.py": {
      "syntax_valid": true,
      "lines_of_code": 513,
      "ast_nodes": 2065,
      "functions": 13,
      "classes": 0,
      "imports": 26
    },
    "test_simple_pipeline_guard.py": {
      "syntax_valid": true,
      "lines_of_code": 365,
      "ast_nodes": 1419,
      "functions": 15,
      "classes": 1,
      "imports": 11
    },
    "validate_implementation.py": {
      "syntax_valid": true,
      "lines_of_code": 665,
      "ast_nodes": 3375,
      "functions": 17,
      "classes": 1,
      "imports": 7
    },
    "validation_report.py": {
      "syntax_valid": true,
      "lines_of_code": 681,
      "ast_nodes": 3555,
      "functions": 23,
      "classes": 1,
      "imports": 8
    },
    "evolution/autonomous_learner.py": {
      "syntax_valid": true,
      "lines_of_code": 937,
      "ast_nodes": 4937,
      "functions": 30,
      "classes": 5,
      "imports": 11
    },
    "global/i18n_manager.py": {
      "syntax_valid": true,
      "lines_of_code": 893,
      "ast_nodes": 3415,
      "functions": 21,
      "classes": 5,
      "imports": 10
    },
    "hdc_robot_controller/__init__.py": {
      "syntax_valid": true,
      "lines_of_code": 200,
      "ast_nodes": 659,
      "functions": 12,
      "classes": 1,
      "imports": 15
    },
    "hdc_robot_controller/main.py": {
      "syntax_valid": true,
      "lines_of_code": 436,
      "ast_nodes": 1543,
      "functions": 13,
      "classes": 1,
      "imports": 17
    },
    "launch/hdc_robot_controller.launch.py": {
      "syntax_valid": true,
      "lines_of_code": 308,
      "ast_nodes": 731,
      "functions": 1,
      "classes": 0,
      "imports": 8
    },
    "monitoring/health_monitor.py": {
      "syntax_valid": true,
      "lines_of_code": 637,
      "ast_nodes": 2866,
      "functions": 16,
      "classes": 4,
      "imports": 12
    },
    "optimization/quantum_acceleration_engine.py": {
      "syntax_valid": true,
      "lines_of_code": 829,
      "ast_nodes": 4759,
      "functions": 25,
      "classes": 7,
      "imports": 21
    },
    "pipeline_guard/__init__.py": {
      "syntax_valid": true,
      "lines_of_code": 31,
      "ast_nodes": 39,
      "functions": 0,
      "classes": 0,
      "imports": 5
    },
    "pipeline_guard/core.py": {
      "syntax_valid": true,
      "lines_of_code": 966,
      "ast_nodes": 4478,
      "functions": 26,
      "classes": 6,
      "imports": 18
    },
    "pipeline_guard/dashboard.py": {
      "syntax_valid": true,
      "lines_of_code": 904,
      "ast_nodes": 1485,
      "functions": 20,
      "classes": 1,
      "imports": 13
    },
    "pipeline_guard/detection.py": {
      "syntax_valid": true,
      "lines_of_code": 1074,
      "ast_nodes": 5671,
      "functions": 26,
      "classes": 6,
      "imports": 14
    },
    "pipeline_guard/i18n.py": {
      "syntax_valid": true,
      "lines_of_code": 683,
      "ast_nodes": 2338,
      "functions": 17,
      "classes": 4,
      "imports": 10
    },
    "pipeline_guard/main.py": {
      "syntax_valid": true,
      "lines_of_code": 419,
      "ast_nodes": 1909,
      "functions": 13,
      "classes": 1,
      "imports": 18
    },
    "pipeline_guard/monitoring.py": {
      "syntax_valid": true,
      "lines_of_code": 873,
      "ast_nodes": 4135,
      "functions": 33,
      "classes": 9,
      "imports": 18
    },
    "pipeline_guard/repair.py": {
      "syntax_valid": true,
      "lines_of_code": 880,
      "ast_nodes": 4108,
      "functions": 37,
      "classes": 10,
      "imports": 19
    },
    "pipeline_guard/security.py": {
      "syntax_valid": true,
      "lines_of_code": 810,
      "ast_nodes": 3974,
      "functions": 43,
      "classes": 11,
      "imports": 18
    },
    "robustness/enterprise_fault_tolerance.py": {
      "syntax_valid": true,
      "lines_of_code": 816,
      "ast_nodes": 4190,
      "functions": 41,
      "classes": 10,
      "imports": 18
    },
    "scripts/benchmark_suite.py": {
      "syntax_valid": true,
      "lines_of_code": 813,
      "ast_nodes": 4566,
      "functions": 25,
      "classes": 3,
      "imports": 15
    },
    "scripts/demo_controller.py": {
      "syntax_valid": true,
      "lines_of_code": 393,
      "ast_nodes": 1892,
      "functions": 11,
      "classes": 1,
      "imports": 13
    },
    "scripts/production_validator.py": {
      "syntax_valid": true,
      "lines_of_code": 510,
      "ast_nodes": 2614,
      "functions": 13,
      "classes": 1,
      "imports": 15
    },
    "scripts/quality_checker.py": {
      "syntax_valid": true,
      "lines_of_code": 791,
      "ast_nodes": 3901,
      "functions": 23,
      "classes": 2,
      "imports": 12
    },
    "self_improving/adaptive_optimizer.py": {
      "syntax_valid": true,
      "lines_of_code": 939,
      "ast_nodes": 4650,
      "functions": 22,
      "classes": 6,
      "imports": 14
    },
    "tests/test_advanced_intelligence.py": {
      "syntax_valid": true,
      "lines_of_code": 744,
      "ast_nodes": 3193,
      "functions": 38,
      "classes": 7,
      "imports": 13
    },
    "tests/test_autonomous_mastery.py": {
      "syntax_valid": true,
      "lines_of_code": 675,
      "ast_nodes": 2565,
      "functions": 30,
      "classes": 5,
      "imports": 11
    },
    "tests/test_comprehensive_quality_gates.py": {
      "syntax_valid": true,
      "lines_of_code": 1128,
      "ast_nodes": 5568,
      "functions": 42,
      "classes": 1,
      "imports": 18
    },
    "tests/test_hdc_comprehensive.py": {
      "syntax_valid": true,
      "lines_of_code": 815,
      "ast_nodes": 4947,
      "functions": 41,
      "classes": 8,
      "imports": 14
    },
    "tests/test_pipeline_guard.py": {
      "syntax_valid": true,
      "lines_of_code": 973,
      "ast_nodes": 3607,
      "functions": 46,
      "classes": 8,
      "imports": 16
    },
    "validation/comprehensive_quality_gates.py": {
      "syntax_valid": true,
      "lines_of_code": 960,
      "ast_nodes": 4643,
      "functions": 19,
      "classes": 5,
      "imports": 15
    },
    "validation/security_validator.py": {
      "syntax_valid": true,
      "lines_of_code": 1365,
      "ast_nodes": 5384,
      "functions": 46,
      "classes": 5,
      "imports": 15
    },
    "hdc_robot_controller/advanced_intelligence/__init__.py": {
      "syntax_valid": true,
      "lines_of_code": 25,
      "ast_nodes": 27,
      "functions": 0,
      "classes": 0,
      "imports": 5
    },
    "hdc_robot_controller/advanced_intelligence/meta_learner.py": {
      "syntax_valid": true,
      "lines_of_code": 840,
      "ast_nodes": 4545,
      "functions": 29,
      "classes": 6,
      "imports": 16
    },
    "hdc_robot_controller/advanced_intelligence/multi_modal_fusion.py": {
      "syntax_valid": true,
      "lines_of_code": 1316,
      "ast_nodes": 6819,
      "functions": 43,
      "classes": 6,
      "imports": 16
    },
    "hdc_robot_controller/advanced_intelligence/neural_hdc_hybrid.py": {
      "syntax_valid": true,
      "lines_of_code": 838,
      "ast_nodes": 4215,
      "functions": 17,
      "classes": 6,
      "imports": 14
    },
    "hdc_robot_controller/advanced_intelligence/quantum_hdc.py": {
      "syntax_valid": true,
      "lines_of_code": 321,
      "ast_nodes": 1539,
      "functions": 14,
      "classes": 4,
      "imports": 8
    },
    "hdc_robot_controller/advanced_intelligence/symbolic_reasoner.py": {
      "syntax_valid": true,
      "lines_of_code": 871,
      "ast_nodes": 4578,
      "functions": 44,
      "classes": 8,
      "imports": 10
    },
    "hdc_robot_controller/autonomous_mastery/__init__.py": {
      "syntax_valid": true,
      "lines_of_code": 21,
      "ast_nodes": 27,
      "functions": 0,
      "classes": 0,
      "imports": 5
    },
    "hdc_robot_controller/autonomous_mastery/adaptive_architecture.py": {
      "syntax_valid": true,
      "lines_of_code": 960,
      "ast_nodes": 4519,
      "functions": 40,
      "classes": 7,
      "imports": 15
    },
    "hdc_robot_controller/autonomous_mastery/self_modifying_code.py": {
      "syntax_valid": true,
      "lines_of_code": 908,
      "ast_nodes": 4059,
      "functions": 30,
      "classes": 6,
      "imports": 20
    },
    "hdc_robot_controller/core/__init__.py": {
      "syntax_valid": true,
      "lines_of_code": 12,
      "ast_nodes": 30,
      "functions": 0,
      "classes": 0,
      "imports": 4
    },
    "hdc_robot_controller/core/adaptive_learning.py": {
      "syntax_valid": true,
      "lines_of_code": 595,
      "ast_nodes": 2431,
      "functions": 20,
      "classes": 4,
      "imports": 9
    },
    "hdc_robot_controller/core/behavior_learner.py": {
      "syntax_valid": true,
      "lines_of_code": 438,
      "ast_nodes": 2046,
      "functions": 11,
      "classes": 1,
      "imports": 8
    },
    "hdc_robot_controller/core/encoding.py": {
      "syntax_valid": true,
      "lines_of_code": 426,
      "ast_nodes": 2916,
      "functions": 27,
      "classes": 6,
      "imports": 6
    },
    "hdc_robot_controller/core/error_handling.py": {
      "syntax_valid": true,
      "lines_of_code": 945,
      "ast_nodes": 4788,
      "functions": 55,
      "classes": 15,
      "imports": 12
    },
    "hdc_robot_controller/core/hypervector.py": {
      "syntax_valid": true,
      "lines_of_code": 355,
      "ast_nodes": 2070,
      "functions": 40,
      "classes": 1,
      "imports": 6
    },
    "hdc_robot_controller/core/logging_system.py": {
      "syntax_valid": true,
      "lines_of_code": 630,
      "ast_nodes": 3003,
      "functions": 31,
      "classes": 4,
      "imports": 13
    },
    "hdc_robot_controller/core/memory.py": {
      "syntax_valid": true,
      "lines_of_code": 515,
      "ast_nodes": 3039,
      "functions": 52,
      "classes": 5,
      "imports": 10
    },
    "hdc_robot_controller/core/operations.py": {
      "syntax_valid": true,
      "lines_of_code": 307,
      "ast_nodes": 1909,
      "functions": 32,
      "classes": 3,
      "imports": 4
    },
    "hdc_robot_controller/core/security.py": {
      "syntax_valid": true,
      "lines_of_code": 634,
      "ast_nodes": 3431,
      "functions": 35,
      "classes": 9,
      "imports": 15
    },
    "hdc_robot_controller/core/sensor_encoder.py": {
      "syntax_valid": true,
      "lines_of_code": 365,
      "ast_nodes": 2205,
      "functions": 9,
      "classes": 1,
      "imports": 5
    },
    "hdc_robot_controller/core/sensor_fusion.py": {
      "syntax_valid": true,
      "lines_of_code": 890,
      "ast_nodes": 4620,
      "functions": 31,
      "classes": 9,
      "imports": 10
    },
    "hdc_robot_controller/optimization/gpu_acceleration.py": {
      "syntax_valid": true,
      "lines_of_code": 702,
      "ast_nodes": 3861,
      "functions": 32,
      "classes": 3,
      "imports": 9
    },
    "hdc_robot_controller/optimization/gpu_accelerator.py": {
      "syntax_valid": true,
      "lines_of_code": 607,
      "ast_nodes": 3022,
      "functions": 29,
      "classes": 2,
      "imports": 11
    },
    "hdc_robot_controller/optimization/performance_optimizer.py": {
      "syntax_valid": true,
      "lines_of_code": 691,
      "ast_nodes": 4038,
      "functions": 52,
      "classes": 8,
      "imports": 20
    },
    "hdc_robot_controller/research/benchmark_suite.py": {
      "syntax_valid": true,
      "lines_of_code": 951,
      "ast_nodes": 5623,
      "functions": 23,
      "classes": 3,
      "imports": 22
    },
    "hdc_robot_controller/research/meta_learning.py": {
      "syntax_valid": true,
      "lines_of_code": 892,
      "ast_nodes": 3739,
      "functions": 27,
      "classes": 4,
      "imports": 9
    },
    "hdc_robot_controller/research/neuromorphic_hdc.py": {
      "syntax_valid": true,
      "lines_of_code": 1000,
      "ast_nodes": 4750,
      "functions": 33,
      "classes": 6,
      "imports": 12
    },
    "hdc_robot_controller/research/quantum_hdc.py": {
      "syntax_valid": true,
      "lines_of_code": 945,
      "ast_nodes": 4694,
      "functions": 34,
      "classes": 4,
      "imports": 12
    },
    "hdc_robot_controller/robustness/advanced_error_recovery.py": {
      "syntax_valid": true,
      "lines_of_code": 656,
      "ast_nodes": 2970,
      "functions": 28,
      "classes": 7,
      "imports": 11
    },
    "hdc_robot_controller/robustness/advanced_fault_tolerance.py": {
      "syntax_valid": true,
      "lines_of_code": 975,
      "ast_nodes": 4169,
      "functions": 42,
      "classes": 7,
      "imports": 14
    },
    "hdc_robot_controller/robustness/error_recovery.py": {
      "syntax_valid": true,
      "lines_of_code": 964,
      "ast_nodes": 4153,
      "functions": 44,
      "classes": 8,
      "imports": 16
    },
    "hdc_robot_controller/robustness/fault_tolerance.py": {
      "syntax_valid": true,
      "lines_of_code": 1141,
      "ast_nodes": 4950,
      "functions": 41,
      "classes": 10,
      "imports": 14
    },
    "hdc_robot_controller/scaling/distributed_coordinator.py": {
      "syntax_valid": true,
      "lines_of_code": 835,
      "ast_nodes": 3926,
      "functions": 35,
      "classes": 7,
      "imports": 14
    },
    "hdc_robot_controller/scaling/distributed_hdc_processing.py": {
      "syntax_valid": true,
      "lines_of_code": 926,
      "ast_nodes": 4556,
      "functions": 40,
      "classes": 7,
      "imports": 17
    },
    "hdc_robot_controller/scaling/distributed_processing.py": {
      "syntax_valid": true,
      "lines_of_code": 906,
      "ast_nodes": 4756,
      "functions": 35,
      "classes": 9,
      "imports": 18
    },
    "hdc_robot_controller/scaling/performance_optimizer.py": {
      "syntax_valid": true,
      "lines_of_code": 1058,
      "ast_nodes": 5760,
      "functions": 47,
      "classes": 8,
      "imports": 20
    },
    "hdc_robot_controller/security/enhanced_security.py": {
      "syntax_valid": true,
      "lines_of_code": 1098,
      "ast_nodes": 4540,
      "functions": 41,
      "classes": 10,
      "imports": 21
    },
    "hdc_robot_controller/security/security_framework.py": {
      "syntax_valid": true,
      "lines_of_code": 1009,
      "ast_nodes": 4861,
      "functions": 41,
      "classes": 11,
      "imports": 22
    },
    "research/algorithms/adaptive_hdc.py": {
      "syntax_valid": true,
      "lines_of_code": 381,
      "ast_nodes": 2122,
      "functions": 8,
      "classes": 2,
      "imports": 9
    },
    "research/algorithms/quantum_enhanced_hdc.py": {
      "syntax_valid": true,
      "lines_of_code": 455,
      "ast_nodes": 3269,
      "functions": 18,
      "classes": 4,
      "imports": 13
    },
    "research/benchmarks/comparative_study.py": {
      "syntax_valid": true,
      "lines_of_code": 634,
      "ast_nodes": 3274,
      "functions": 33,
      "classes": 6,
      "imports": 14
    },
    "research/benchmarks/theoretical_limits_study.py": {
      "syntax_valid": true,
      "lines_of_code": 585,
      "ast_nodes": 2945,
      "functions": 13,
      "classes": 3,
      "imports": 15
    },
    "research/experiments/real_time_adaptation_framework.py": {
      "syntax_valid": true,
      "lines_of_code": 660,
      "ast_nodes": 3931,
      "functions": 25,
      "classes": 6,
      "imports": 14
    },
    "research/experiments/reproducible_framework.py": {
      "syntax_valid": true,
      "lines_of_code": 592,
      "ast_nodes": 3428,
      "functions": 17,
      "classes": 3,
      "imports": 16
    },
    "research/validation/statistical_significance_validator.py": {
      "syntax_valid": true,
      "lines_of_code": 738,
      "ast_nodes": 4721,
      "functions": 22,
      "classes": 2,
      "imports": 15
    },
    "src/hdc_robot_controller/__init__.py": {
      "syntax_valid": true,
      "lines_of_code": 28,
      "ast_nodes": 43,
      "functions": 0,
      "classes": 0,
      "imports": 7
    },
    "src/hdc_robot_controller/core/hypervector.py": {
      "syntax_valid": true,
      "lines_of_code": 282,
      "ast_nodes": 1628,
      "functions": 27,
      "classes": 2,
      "imports": 7
    },
    "src/hdc_robot_controller/core/operations.py": {
      "syntax_valid": true,
      "lines_of_code": 348,
      "ast_nodes": 1520,
      "functions": 11,
      "classes": 1,
      "imports": 6
    }
  },
  "code_complexity": {
    "hdc_robot_controller/advanced_intelligence/multi_modal_fusion.py": {
      "cyclomatic_complexity": 109,
      "function_count": 43,
      "class_count": 6,
      "max_nesting_depth": 7,
      "lines_of_code": 1056,
      "documentation_ratio": 0.2215909090909091
    },
    "hdc_robot_controller/advanced_intelligence/quantum_hdc.py": {
      "cyclomatic_complexity": 25,
      "function_count": 14,
      "class_count": 4,
      "max_nesting_depth": 6,
      "lines_of_code": 250,
      "documentation_ratio": 0.292
    },
    "hdc_robot_controller/advanced_intelligence/neural_hdc_hybrid.py": {
      "cyclomatic_complexity": 55,
      "function_count": 17,
      "class_count": 6,
      "max_nesting_depth": 7,
      "lines_of_code": 681,
      "documentation_ratio": 0.21145374449339208
    },
    "hdc_robot_controller/autonomous_mastery/self_modifying_code.py": {
      "cyclomatic_complexity": 81,
      "function_count": 30,
      "class_count": 6,
      "max_nesting_depth": 9,
      "lines_of_code": 728,
      "documentation_ratio": 0.18681318681318682
    },
    "hdc_robot_controller/autonomous_mastery/adaptive_architecture.py": {
      "cyclomatic_complexity": 77,
      "function_count": 40,
      "class_count": 7,
      "max_nesting_depth": 7,
      "lines_of_code": 782,
      "documentation_ratio": 0.1815856777493606
    }
  },
  "import_analysis": {
    "setup.py": {
      "standard_library": [
        "os",
        "sys"
      ],
      "third_party": [
        "setuptools",
        "pybind11",
        "pybind11",
        "pybind11.setup_helpers"
      ],
      "local": []
    },
    "test_comprehensive.py": {
      "standard_library": [
        "sys",
        "os",
        "time",
        "pathlib",
        "time",
        "sys"
      ],
      "third_party": [
        "numpy"
      ],
      "local": [
        "hdc_robot_controller.core.hypervector",
        "hdc_robot_controller.core.operations",
        "hdc_robot_controller.research.meta_learning",
        "hdc_robot_controller.core.hypervector",
        "hdc_robot_controller.research.quantum_hdc",
        "hdc_robot_controller.core.hypervector",
        "hdc_robot_controller.research.neuromorphic_hdc",
        "hdc_robot_controller.core.hypervector",
        "hdc_robot_controller.robustness.fault_tolerance",
        "hdc_robot_controller.core.hypervector",
        "hdc_robot_controller.security.security_framework",
        "hdc_robot_controller.core.hypervector",
        "hdc_robot_controller.scaling.performance_optimizer",
        "hdc_robot_controller.core.hypervector",
        "hdc_robot_controller.core.hypervector",
        "hdc_robot_controller.core.hypervector",
        "hdc_robot_controller.research.meta_learning",
        "hdc_robot_controller.robustness.fault_tolerance",
        "hdc_robot_controller.scaling.performance_optimizer"
      ]
    },
    "test_simple_pipeline_guard.py": {
      "standard_library": [
        "sys",
        "os",
        "time",
        "json"
      ],
      "third_party": [
        "tempfile",
        "datetime",
        "pipeline_guard.core",
        "pipeline_guard.detection",
        "pipeline_guard.repair",
        "pipeline_guard.monitoring"
      ],
      "local": [
        "hdc_robot_controller.core.hypervector"
      ]
    },
    "validate_implementation.py": {
      "standard_library": [
        "os",
        "sys",
        "ast",
        "time",
        "subprocess",
        "pathlib",
        "typing"
      ],
      "third_party": [],
      "local": []
    },
    "validation_report.py": {
      "standard_library": [
        "sys",
        "os",
        "ast",
        "inspect",
        "time",
        "pathlib",
        "typing",
        "json"
      ],
      "third_party": [],
      "local": []
    },
    "evolution/autonomous_learner.py": {
      "standard_library": [
        "time",
        "threading",
        "json",
        "random",
        "typing",
        "dataclasses",
        "enum",
        "collections",
        "os"
      ],
      "third_party": [
        "logging",
        "copy"
      ],
      "local": []
    },
    "global/i18n_manager.py": {
      "standard_library": [
        "json",
        "os",
        "typing",
        "dataclasses",
        "enum",
        "threading",
        "time",
        "collections"
      ],
      "third_party": [
        "logging",
        "datetime"
      ],
      "local": []
    },
    "hdc_robot_controller/__init__.py": {
      "standard_library": [],
      "third_party": [
        "core.hypervector",
        "core.encoding",
        "core.memory",
        "core.operations",
        "core.encoding",
        "control.fault_tolerant_controller",
        "control.behavior_learner",
        "control.hdc_controller",
        "utils.benchmarks",
        "utils.visualization",
        "utils.logger",
        "rclpy",
        "ros2_integration.perception_node",
        "ros2_integration.control_node",
        "ros2_integration.learning_node"
      ],
      "local": []
    },
    "hdc_robot_controller/main.py": {
      "standard_library": [
        "os",
        "sys",
        "time",
        "threading",
        "pathlib",
        "typing",
        "json"
      ],
      "third_party": [
        "signal",
        "flask"
      ],
      "local": [
        "hdc_robot_controller.core.hypervector",
        "hdc_robot_controller.core.memory",
        "hdc_robot_controller.core.sensor_encoder",
        "hdc_robot_controller.core.behavior_learner",
        "hdc_robot_controller.core.logging_system",
        "hdc_robot_controller.robustness.advanced_error_recovery",
        "hdc_robot_controller.optimization.gpu_accelerator",
        "hdc_robot_controller.scaling.distributed_coordinator"
      ]
    },
    "launch/hdc_robot_controller.launch.py": {
      "standard_library": [
        "os"
      ],
      "third_party": [
        "launch",
        "launch.actions",
        "launch.conditions",
        "launch.launch_description_sources",
        "launch.substitutions",
        "launch_ros.actions",
        "launch_ros.substitutions"
      ],
      "local": []
    },
    "monitoring/health_monitor.py": {
      "standard_library": [
        "time",
        "threading",
        "json",
        "typing",
        "dataclasses",
        "collections",
        "enum",
        "os"
      ],
      "third_party": [
        "logging",
        "statistics",
        "numpy",
        "concurrent.futures"
      ],
      "local": []
    },
    "optimization/quantum_acceleration_engine.py": {
      "standard_library": [
        "time",
        "threading",
        "typing",
        "dataclasses",
        "enum",
        "queue",
        "json",
        "collections",
        "hashlib"
      ],
      "third_party": [
        "numpy",
        "logging",
        "multiprocessing",
        "concurrent.futures",
        "asyncio",
        "pickle",
        "psutil",
        "statistics",
        "cupy",
        "cupyx.scipy",
        "numba",
        "numba"
      ],
      "local": []
    },
    "pipeline_guard/__init__.py": {
      "standard_library": [],
      "third_party": [
        "core",
        "monitoring",
        "detection",
        "repair",
        "dashboard"
      ],
      "local": []
    },
    "pipeline_guard/core.py": {
      "standard_library": [
        "time",
        "json",
        "threading",
        "enum",
        "typing",
        "dataclasses",
        "pathlib",
        "random"
      ],
      "third_party": [
        "asyncio",
        "logging",
        "datetime",
        "uuid",
        "numpy"
      ],
      "local": [
        "hdc_robot_controller.core.hypervector",
        "hdc_robot_controller.core.memory",
        "hdc_robot_controller.core.behavior_learner",
        "hdc_robot_controller.core.logging_system",
        "hdc_robot_controller.robustness.advanced_error_recovery"
      ]
    },
    "pipeline_guard/dashboard.py": {
      "standard_library": [
        "json",
        "time",
        "typing",
        "dataclasses",
        "pathlib",
        "threading"
      ],
      "third_party": [
        "asyncio",
        "logging",
        "datetime",
        "core",
        "monitoring",
        "flask",
        "flask_socketio"
      ],
      "local": []
    },
    "pipeline_guard/detection.py": {
      "standard_library": [
        "time",
        "typing",
        "dataclasses",
        "enum",
        "collections"
      ],
      "third_party": [
        "math",
        "numpy",
        "statistics",
        "datetime",
        "logging",
        "core"
      ],
      "local": [
        "hdc_robot_controller.core.hypervector",
        "hdc_robot_controller.core.memory",
        "hdc_robot_controller.core.behavior_learner"
      ]
    },
    "pipeline_guard/i18n.py": {
      "standard_library": [
        "json",
        "os",
        "re",
        "typing",
        "dataclasses",
        "enum",
        "pathlib"
      ],
      "third_party": [
        "datetime",
        "locale",
        "pytz"
      ],
      "local": []
    },
    "pipeline_guard/main.py": {
      "standard_library": [
        "os",
        "sys",
        "time",
        "threading",
        "pathlib",
        "typing",
        "json"
      ],
      "third_party": [
        "signal",
        "argparse",
        "asyncio",
        "logging",
        "pipeline_guard.core",
        "pipeline_guard.monitoring",
        "pipeline_guard.repair",
        "pipeline_guard.security",
        "pipeline_guard.i18n",
        "pipeline_guard.dashboard",
        "yaml"
      ],
      "local": []
    },
    "pipeline_guard/monitoring.py": {
      "standard_library": [
        "time",
        "json",
        "threading",
        "typing",
        "dataclasses",
        "enum",
        "collections",
        "random"
      ],
      "third_party": [
        "asyncio",
        "requests",
        "logging",
        "datetime",
        "abc",
        "statistics",
        "numpy",
        "concurrent.futures",
        "core",
        "psutil"
      ],
      "local": []
    },
    "pipeline_guard/repair.py": {
      "standard_library": [
        "time",
        "json",
        "subprocess",
        "typing",
        "dataclasses",
        "enum",
        "threading",
        "random"
      ],
      "third_party": [
        "asyncio",
        "logging",
        "datetime",
        "abc",
        "uuid",
        "concurrent.futures",
        "core",
        "core"
      ],
      "local": [
        "hdc_robot_controller.core.hypervector",
        "hdc_robot_controller.core.memory",
        "hdc_robot_controller.robustness.advanced_error_recovery"
      ]
    },
    "pipeline_guard/security.py": {
      "standard_library": [
        "hashlib",
        "time",
        "json",
        "re",
        "typing",
        "dataclasses",
        "enum",
        "functools"
      ],
      "third_party": [
        "hmac",
        "logging",
        "secrets",
        "datetime",
        "abc",
        "ipaddress",
        "base64",
        "cryptography.fernet",
        "cryptography.hazmat.primitives",
        "cryptography.hazmat.primitives.kdf.pbkdf2"
      ],
      "local": []
    },
    "robustness/enterprise_fault_tolerance.py": {
      "standard_library": [
        "time",
        "threading",
        "queue",
        "json",
        "typing",
        "dataclasses",
        "enum",
        "collections",
        "hashlib"
      ],
      "third_party": [
        "numpy",
        "logging",
        "concurrent.futures",
        "multiprocessing",
        "asyncio",
        "psutil",
        "traceback",
        "pickle",
        "statistics"
      ],
      "local": []
    },
    "scripts/benchmark_suite.py": {
      "standard_library": [
        "time",
        "json",
        "os",
        "typing",
        "dataclasses",
        "collections"
      ],
      "third_party": [
        "rclpy",
        "rclpy.node",
        "std_msgs.msg",
        "geometry_msgs.msg",
        "sensor_msgs.msg",
        "numpy",
        "matplotlib.pyplot",
        "psutil",
        "gc"
      ],
      "local": []
    },
    "scripts/demo_controller.py": {
      "standard_library": [
        "time",
        "typing",
        "sys"
      ],
      "third_party": [
        "rclpy",
        "rclpy.node",
        "rclpy.qos",
        "std_msgs.msg",
        "geometry_msgs.msg",
        "sensor_msgs.msg",
        "numpy",
        "argparse",
        "termios",
        "tty"
      ],
      "local": []
    },
    "scripts/production_validator.py": {
      "standard_library": [
        "sys",
        "time",
        "json",
        "pathlib",
        "typing",
        "subprocess"
      ],
      "third_party": [
        "traceback"
      ],
      "local": [
        "hdc_robot_controller.core.hypervector",
        "hdc_robot_controller.core.memory",
        "hdc_robot_controller.core.sensor_encoder",
        "hdc_robot_controller.core.behavior_learner",
        "hdc_robot_controller.core.logging_system",
        "hdc_robot_controller.robustness.advanced_error_recovery",
        "hdc_robot_controller.optimization.gpu_accelerator",
        "hdc_robot_controller.scaling.distributed_coordinator"
      ]
    },
    "scripts/quality_checker.py": {
      "standard_library": [
        "os",
        "sys",
        "subprocess",
        "time",
        "json",
        "pathlib",
        "typing",
        "dataclasses"
      ],
      "third_party": [
        "argparse",
        "logging",
        "concurrent.futures",
        "psutil"
      ],
      "local": []
    },
    "self_improving/adaptive_optimizer.py": {
      "standard_library": [
        "time",
        "threading",
        "json",
        "typing",
        "dataclasses",
        "enum",
        "collections",
        "os",
        "hashlib"
      ],
      "third_party": [
        "logging",
        "numpy",
        "statistics",
        "concurrent.futures",
        "pickle"
      ],
      "local": []
    },
    "tests/test_advanced_intelligence.py": {
      "standard_library": [
        "time",
        "pathlib"
      ],
      "third_party": [
        "pytest",
        "numpy",
        "torch",
        "torch.nn",
        "torch.nn.functional"
      ],
      "local": [
        "hdc_robot_controller.advanced_intelligence",
        "hdc_robot_controller.advanced_intelligence.multi_modal_fusion",
        "hdc_robot_controller.advanced_intelligence.quantum_hdc",
        "hdc_robot_controller.advanced_intelligence.neural_hdc_hybrid",
        "hdc_robot_controller.advanced_intelligence.meta_learner",
        "hdc_robot_controller.core.hypervector"
      ]
    },
    "tests/test_autonomous_mastery.py": {
      "standard_library": [
        "time",
        "ast",
        "inspect",
        "pathlib"
      ],
      "third_party": [
        "pytest",
        "numpy",
        "unittest.mock"
      ],
      "local": [
        "hdc_robot_controller.autonomous_mastery",
        "hdc_robot_controller.autonomous_mastery.self_modifying_code",
        "hdc_robot_controller.autonomous_mastery.adaptive_architecture",
        "hdc_robot_controller.core.hypervector"
      ]
    },
    "tests/test_comprehensive_quality_gates.py": {
      "standard_library": [
        "time",
        "pathlib",
        "typing",
        "json",
        "os",
        "os"
      ],
      "third_party": [
        "pytest",
        "numpy",
        "tempfile",
        "shutil",
        "logging",
        "psutil",
        "psutil"
      ],
      "local": [
        "hdc_robot_controller.core.hypervector",
        "hdc_robot_controller.core.adaptive_learning",
        "hdc_robot_controller.core.sensor_fusion",
        "hdc_robot_controller.robustness.advanced_fault_tolerance",
        "hdc_robot_controller.security.enhanced_security"
      ]
    },
    "tests/test_hdc_comprehensive.py": {
      "standard_library": [
        "time",
        "os",
        "threading",
        "json",
        "sys"
      ],
      "third_party": [
        "unittest",
        "numpy",
        "tempfile",
        "unittest.mock"
      ],
      "local": [
        "hdc_robot_controller.core.hypervector",
        "hdc_robot_controller.core.operations",
        "hdc_robot_controller.core.memory",
        "hdc_robot_controller.core.error_handling",
        "hdc_robot_controller.core.security"
      ]
    },
    "tests/test_pipeline_guard.py": {
      "standard_library": [
        "time",
        "json",
        "threading",
        "typing",
        "sys",
        "os"
      ],
      "third_party": [
        "pytest",
        "asyncio",
        "tempfile",
        "datetime",
        "unittest.mock",
        "pipeline_guard.core",
        "pipeline_guard.detection",
        "pipeline_guard.repair",
        "pipeline_guard.monitoring"
      ],
      "local": [
        "hdc_robot_controller.core.hypervector"
      ]
    },
    "validation/comprehensive_quality_gates.py": {
      "standard_library": [
        "os",
        "sys",
        "time",
        "json",
        "subprocess",
        "threading",
        "typing",
        "dataclasses",
        "enum",
        "pathlib",
        "hashlib",
        "ast",
        "re"
      ],
      "third_party": [
        "logging",
        "concurrent.futures"
      ],
      "local": []
    },
    "validation/security_validator.py": {
      "standard_library": [
        "re",
        "hashlib",
        "time",
        "json",
        "threading",
        "typing",
        "dataclasses",
        "enum",
        "collections",
        "os"
      ],
      "third_party": [
        "secrets",
        "logging",
        "base64",
        "sqlite3",
        "concurrent.futures"
      ],
      "local": []
    },
    "hdc_robot_controller/advanced_intelligence/__init__.py": {
      "standard_library": [],
      "third_party": [
        "multi_modal_fusion",
        "quantum_hdc",
        "neural_hdc_hybrid",
        "symbolic_reasoner",
        "meta_learner"
      ],
      "local": []
    },
    "hdc_robot_controller/advanced_intelligence/meta_learner.py": {
      "standard_library": [
        "typing",
        "dataclasses",
        "collections",
        "time",
        "random",
        "pathlib",
        "json",
        "json"
      ],
      "third_party": [
        "numpy",
        "torch",
        "torch.nn",
        "torch.nn.functional",
        "core.hypervector",
        "core.operations",
        "pickle",
        "pickle"
      ],
      "local": []
    },
    "hdc_robot_controller/advanced_intelligence/multi_modal_fusion.py": {
      "standard_library": [
        "typing",
        "dataclasses",
        "time",
        "pathlib",
        "collections",
        "threading",
        "json",
        "json"
      ],
      "third_party": [
        "numpy",
        "torch",
        "torch.nn",
        "torch.nn.functional",
        "logging",
        "concurrent.futures",
        "core.hypervector",
        "core.operations"
      ],
      "local": []
    },
    "hdc_robot_controller/advanced_intelligence/neural_hdc_hybrid.py": {
      "standard_library": [
        "typing",
        "dataclasses",
        "time",
        "pathlib",
        "json",
        "json"
      ],
      "third_party": [
        "numpy",
        "torch",
        "torch.nn",
        "torch.nn.functional",
        "core.hypervector",
        "core.operations",
        "pickle",
        "pickle"
      ],
      "local": []
    },
    "hdc_robot_controller/advanced_intelligence/quantum_hdc.py": {
      "standard_library": [
        "typing",
        "dataclasses",
        "time"
      ],
      "third_party": [
        "numpy",
        "scipy.optimize",
        "scipy.linalg",
        "cmath",
        "core.hypervector"
      ],
      "local": []
    },
    "hdc_robot_controller/advanced_intelligence/symbolic_reasoner.py": {
      "standard_library": [
        "typing",
        "dataclasses",
        "enum",
        "re",
        "time",
        "pathlib",
        "json"
      ],
      "third_party": [
        "numpy",
        "core.hypervector",
        "pickle"
      ],
      "local": []
    },
    "hdc_robot_controller/autonomous_mastery/__init__.py": {
      "standard_library": [],
      "third_party": [
        "self_modifying_code",
        "adaptive_architecture",
        "autonomous_evolution",
        "consciousness_simulator",
        "reality_interface"
      ],
      "local": []
    },
    "hdc_robot_controller/autonomous_mastery/adaptive_architecture.py": {
      "standard_library": [
        "typing",
        "dataclasses",
        "enum",
        "time",
        "json",
        "pathlib",
        "threading",
        "queue",
        "collections"
      ],
      "third_party": [
        "numpy",
        "torch",
        "torch.nn",
        "networkx",
        "psutil",
        "core.hypervector"
      ],
      "local": []
    },
    "hdc_robot_controller/autonomous_mastery/self_modifying_code.py": {
      "standard_library": [
        "ast",
        "inspect",
        "textwrap",
        "sys",
        "os",
        "time",
        "typing",
        "dataclasses",
        "pathlib",
        "hashlib",
        "subprocess",
        "contextlib",
        "json"
      ],
      "third_party": [
        "importlib",
        "numpy",
        "core.hypervector",
        "cProfile",
        "pstats",
        "io",
        "psutil"
      ],
      "local": []
    },
    "hdc_robot_controller/core/__init__.py": {
      "standard_library": [],
      "third_party": [
        "hypervector",
        "operations",
        "memory",
        "encoding"
      ],
      "local": []
    },
    "hdc_robot_controller/core/adaptive_learning.py": {
      "standard_library": [
        "typing",
        "dataclasses",
        "time",
        "pathlib"
      ],
      "third_party": [
        "numpy",
        "pickle",
        "logging",
        "hypervector",
        "memory"
      ],
      "local": []
    },
    "hdc_robot_controller/core/behavior_learner.py": {
      "standard_library": [
        "typing",
        "time",
        "json",
        "collections"
      ],
      "third_party": [
        "numpy",
        "hypervector",
        "memory",
        "sensor_encoder"
      ],
      "local": []
    },
    "hdc_robot_controller/core/encoding.py": {
      "standard_library": [
        "typing"
      ],
      "third_party": [
        "numpy",
        "cv2",
        "hypervector",
        "operations",
        "operations"
      ],
      "local": []
    },
    "hdc_robot_controller/core/error_handling.py": {
      "standard_library": [
        "time",
        "typing",
        "enum",
        "dataclasses",
        "functools",
        "re",
        "re"
      ],
      "third_party": [
        "logging",
        "traceback",
        "numpy",
        "hypervector",
        "html"
      ],
      "local": []
    },
    "hdc_robot_controller/core/hypervector.py": {
      "standard_library": [
        "typing",
        "os",
        "sys",
        "pathlib"
      ],
      "third_party": [
        "ctypes",
        "numpy"
      ],
      "local": []
    },
    "hdc_robot_controller/core/logging_system.py": {
      "standard_library": [
        "json",
        "time",
        "threading",
        "os",
        "sys",
        "typing",
        "collections",
        "pathlib"
      ],
      "third_party": [
        "logging",
        "psutil",
        "datetime",
        "traceback",
        "signal"
      ],
      "local": []
    },
    "hdc_robot_controller/core/memory.py": {
      "standard_library": [
        "typing",
        "json",
        "time",
        "collections"
      ],
      "third_party": [
        "numpy",
        "pickle",
        "hypervector"
      ],
      "local": []
    },
    "hdc_robot_controller/core/operations.py": {
      "standard_library": [
        "typing"
      ],
      "third_party": [
        "numpy",
        "hypervector"
      ],
      "local": []
    },
    "hdc_robot_controller/core/security.py": {
      "standard_library": [
        "hashlib",
        "time",
        "typing",
        "dataclasses",
        "enum",
        "json",
        "re"
      ],
      "third_party": [
        "hmac",
        "secrets",
        "logging",
        "numpy",
        "cryptography.fernet",
        "cryptography.hazmat.primitives",
        "cryptography.hazmat.primitives.kdf.pbkdf2",
        "base64"
      ],
      "local": []
    },
    "hdc_robot_controller/core/sensor_encoder.py": {
      "standard_library": [
        "typing"
      ],
      "third_party": [
        "numpy",
        "hypervector",
        "operations",
        "operations"
      ],
      "local": []
    },
    "hdc_robot_controller/core/sensor_fusion.py": {
      "standard_library": [
        "typing",
        "dataclasses",
        "enum",
        "time"
      ],
      "third_party": [
        "numpy",
        "cv2",
        "scipy.spatial.transform",
        "logging",
        "hypervector",
        "encoding"
      ],
      "local": []
    },
    "hdc_robot_controller/optimization/gpu_acceleration.py": {
      "standard_library": [
        "typing",
        "time"
      ],
      "third_party": [
        "numpy",
        "logging",
        "core.hypervector",
        "cupy",
        "cupyx.scipy.sparse",
        "numba",
        "numba"
      ],
      "local": []
    },
    "hdc_robot_controller/optimization/gpu_accelerator.py": {
      "standard_library": [
        "threading",
        "time",
        "typing"
      ],
      "third_party": [
        "numpy",
        "concurrent.futures",
        "multiprocessing",
        "core.hypervector",
        "core.logging_system",
        "cupy",
        "numba",
        "numba"
      ],
      "local": []
    },
    "hdc_robot_controller/optimization/performance_optimizer.py": {
      "standard_library": [
        "time",
        "threading",
        "typing",
        "dataclasses",
        "collections",
        "functools",
        "os",
        "queue",
        "sys"
      ],
      "third_party": [
        "multiprocessing",
        "psutil",
        "numpy",
        "concurrent.futures",
        "pickle",
        "logging",
        "core.hypervector",
        "core.error_handling",
        "cupy",
        "numba",
        "numba"
      ],
      "local": []
    },
    "hdc_robot_controller/research/benchmark_suite.py": {
      "standard_library": [
        "typing",
        "time",
        "json",
        "dataclasses",
        "collections",
        "pathlib"
      ],
      "third_party": [
        "numpy",
        "pickle",
        "logging",
        "warnings",
        "matplotlib.pyplot",
        "seaborn",
        "scipy",
        "scipy.stats",
        "statsmodels.stats.multitest",
        "pandas",
        "meta_learning",
        "quantum_hdc",
        "neuromorphic_hdc",
        "core.hypervector",
        "core.operations",
        "psutil"
      ],
      "local": []
    },
    "hdc_robot_controller/research/meta_learning.py": {
      "standard_library": [
        "typing",
        "time",
        "dataclasses",
        "collections"
      ],
      "third_party": [
        "numpy",
        "logging",
        "core.hypervector",
        "core.operations",
        "core.memory"
      ],
      "local": []
    },
    "hdc_robot_controller/research/neuromorphic_hdc.py": {
      "standard_library": [
        "typing",
        "time",
        "dataclasses",
        "collections",
        "threading",
        "queue"
      ],
      "third_party": [
        "numpy",
        "logging",
        "scipy.signal",
        "scipy.sparse",
        "core.hypervector",
        "core.operations"
      ],
      "local": []
    },
    "hdc_robot_controller/research/quantum_hdc.py": {
      "standard_library": [
        "typing",
        "time",
        "dataclasses",
        "collections"
      ],
      "third_party": [
        "numpy",
        "cmath",
        "logging",
        "scipy.optimize",
        "scipy.linalg",
        "core.hypervector",
        "core.operations",
        "scipy"
      ],
      "local": []
    },
    "hdc_robot_controller/robustness/advanced_error_recovery.py": {
      "standard_library": [
        "time",
        "threading",
        "typing",
        "collections",
        "enum"
      ],
      "third_party": [
        "traceback",
        "numpy",
        "core.hypervector",
        "core.memory",
        "core.logging_system",
        "core.operations"
      ],
      "local": []
    },
    "hdc_robot_controller/robustness/advanced_fault_tolerance.py": {
      "standard_library": [
        "typing",
        "dataclasses",
        "enum",
        "time",
        "threading",
        "queue",
        "pathlib",
        "hashlib"
      ],
      "third_party": [
        "numpy",
        "logging",
        "pickle",
        "core.hypervector",
        "core.sensor_fusion",
        "psutil"
      ],
      "local": []
    },
    "hdc_robot_controller/robustness/error_recovery.py": {
      "standard_library": [
        "typing",
        "time",
        "threading",
        "dataclasses",
        "collections",
        "enum",
        "hashlib",
        "pathlib"
      ],
      "third_party": [
        "numpy",
        "pickle",
        "logging",
        "copy",
        "core.hypervector",
        "core.operations",
        "core.memory",
        "gc"
      ],
      "local": []
    },
    "hdc_robot_controller/robustness/fault_tolerance.py": {
      "standard_library": [
        "typing",
        "time",
        "threading",
        "dataclasses",
        "collections",
        "enum"
      ],
      "third_party": [
        "numpy",
        "logging",
        "asyncio",
        "concurrent.futures",
        "psutil",
        "core.hypervector",
        "core.operations",
        "core.memory"
      ],
      "local": []
    },
    "hdc_robot_controller/scaling/distributed_coordinator.py": {
      "standard_library": [
        "time",
        "json",
        "threading",
        "hashlib",
        "typing",
        "collections",
        "enum"
      ],
      "third_party": [
        "socket",
        "pickle",
        "concurrent.futures",
        "multiprocessing",
        "core.hypervector",
        "core.memory",
        "core.logging_system"
      ],
      "local": []
    },
    "hdc_robot_controller/scaling/distributed_hdc_processing.py": {
      "standard_library": [
        "typing",
        "dataclasses",
        "enum",
        "time",
        "threading",
        "queue",
        "hashlib",
        "pathlib"
      ],
      "third_party": [
        "numpy",
        "asyncio",
        "multiprocessing",
        "logging",
        "concurrent.futures",
        "pickle",
        "zmq",
        "redis",
        "core.hypervector"
      ],
      "local": []
    },
    "hdc_robot_controller/scaling/distributed_processing.py": {
      "standard_library": [
        "json",
        "time",
        "threading",
        "typing",
        "dataclasses",
        "hashlib",
        "queue",
        "enum"
      ],
      "third_party": [
        "multiprocessing",
        "concurrent.futures",
        "socket",
        "pickle",
        "logging",
        "redis",
        "numpy",
        "core.hypervector",
        "core.error_handling",
        "core.security"
      ],
      "local": []
    },
    "hdc_robot_controller/scaling/performance_optimizer.py": {
      "standard_library": [
        "typing",
        "time",
        "threading",
        "dataclasses",
        "collections",
        "enum",
        "hashlib",
        "pathlib"
      ],
      "third_party": [
        "numpy",
        "multiprocessing",
        "concurrent.futures",
        "psutil",
        "logging",
        "pickle",
        "gc",
        "core.hypervector",
        "core.operations",
        "cupy",
        "numba",
        "numba"
      ],
      "local": []
    },
    "hdc_robot_controller/security/enhanced_security.py": {
      "standard_library": [
        "hashlib",
        "time",
        "typing",
        "dataclasses",
        "enum",
        "pathlib",
        "json",
        "threading",
        "queue"
      ],
      "third_party": [
        "numpy",
        "hmac",
        "secrets",
        "logging",
        "base64",
        "cryptography.fernet",
        "cryptography.hazmat.primitives",
        "cryptography.hazmat.primitives.kdf.pbkdf2",
        "cryptography.hazmat.primitives.asymmetric",
        "jwt",
        "core.hypervector",
        "datetime"
      ],
      "local": []
    },
    "hdc_robot_controller/security/security_framework.py": {
      "standard_library": [
        "typing",
        "time",
        "hashlib",
        "json",
        "dataclasses",
        "collections",
        "enum",
        "pathlib"
      ],
      "third_party": [
        "numpy",
        "hmac",
        "secrets",
        "logging",
        "jwt",
        "cryptography.fernet",
        "cryptography.hazmat.primitives",
        "cryptography.hazmat.primitives.asymmetric",
        "cryptography.hazmat.primitives.kdf.pbkdf2",
        "bcrypt",
        "ssl",
        "socket",
        "core.hypervector",
        "core.operations"
      ],
      "local": []
    },
    "research/algorithms/adaptive_hdc.py": {
      "standard_library": [
        "typing",
        "dataclasses",
        "time",
        "collections"
      ],
      "third_party": [
        "numpy",
        "logging",
        "abc",
        "statistics",
        "scipy"
      ],
      "local": []
    },
    "research/algorithms/quantum_enhanced_hdc.py": {
      "standard_library": [
        "time",
        "typing",
        "dataclasses",
        "enum",
        "threading",
        "collections"
      ],
      "third_party": [
        "numpy",
        "scipy",
        "scipy.linalg",
        "logging",
        "concurrent.futures",
        "multiprocessing",
        "scipy"
      ],
      "local": []
    },
    "research/benchmarks/comparative_study.py": {
      "standard_library": [
        "time",
        "json",
        "typing",
        "dataclasses",
        "collections",
        "threading",
        "os",
        "json"
      ],
      "third_party": [
        "numpy",
        "logging",
        "statistics",
        "abc",
        "multiprocessing",
        "concurrent.futures"
      ],
      "local": []
    },
    "research/benchmarks/theoretical_limits_study.py": {
      "standard_library": [
        "time",
        "json",
        "typing",
        "dataclasses",
        "collections"
      ],
      "third_party": [
        "numpy",
        "scipy",
        "scipy",
        "scipy.special",
        "matplotlib.pyplot",
        "logging",
        "multiprocessing",
        "concurrent.futures",
        "math",
        "statistics"
      ],
      "local": []
    },
    "research/experiments/real_time_adaptation_framework.py": {
      "standard_library": [
        "time",
        "threading",
        "typing",
        "dataclasses",
        "enum",
        "queue",
        "json",
        "collections"
      ],
      "third_party": [
        "numpy",
        "logging",
        "multiprocessing",
        "concurrent.futures",
        "pickle",
        "statistics"
      ],
      "local": []
    },
    "research/experiments/reproducible_framework.py": {
      "standard_library": [
        "json",
        "os",
        "time",
        "hashlib",
        "typing",
        "dataclasses",
        "pathlib",
        "random",
        "collections",
        "sys"
      ],
      "third_party": [
        "numpy",
        "logging",
        "pickle",
        "statistics",
        "concurrent.futures",
        "platform"
      ],
      "local": []
    },
    "research/validation/statistical_significance_validator.py": {
      "standard_library": [
        "time",
        "json",
        "typing",
        "dataclasses",
        "collections"
      ],
      "third_party": [
        "numpy",
        "scipy",
        "scipy",
        "scipy.stats",
        "logging",
        "warnings",
        "multiprocessing",
        "concurrent.futures",
        "math",
        "pickle"
      ],
      "local": []
    },
    "src/hdc_robot_controller/__init__.py": {
      "standard_library": [],
      "third_party": [
        "core.hypervector",
        "core.operations",
        "core.memory",
        "controllers.base",
        "encoding.multimodal",
        "learning.behavior",
        "utils.config"
      ],
      "local": []
    },
    "src/hdc_robot_controller/core/hypervector.py": {
      "standard_library": [
        "typing",
        "dataclasses",
        "hashlib"
      ],
      "third_party": [
        "numpy",
        "numba",
        "numba",
        "pickle"
      ],
      "local": []
    },
    "src/hdc_robot_controller/core/operations.py": {
      "standard_library": [
        "typing"
      ],
      "third_party": [
        "numpy",
        "numba",
        "numba",
        "hypervector",
        "structlog"
      ],
      "local": []
    }
  },
  "test_coverage": {
    "test_advanced_intelligence.py": {
      "test_classes": [
        "TestMultiModalFusion",
        "TestQuantumInspiredHDC",
        "TestNeuralHDCHybrid",
        "TestAdvancedSymbolicReasoner",
        "TestMetaLearningEngine",
        "TestIntegrationScenarios",
        "TestPerformanceBenchmarks"
      ],
      "test_methods": [
        "TestMultiModalFusion.test_modality_encoding",
        "TestMultiModalFusion.test_multi_modal_fusion",
        "TestMultiModalFusion.test_adaptive_weighting",
        "TestMultiModalFusion.test_context_application",
        "TestQuantumInspiredHDC.test_quantum_state_creation",
        "TestQuantumInspiredHDC.test_quantum_operations",
        "TestQuantumInspiredHDC.test_quantum_similarity",
        "TestQuantumInspiredHDC.test_quantum_measurement",
        "TestQuantumInspiredHDC.test_quantum_learning",
        "TestQuantumInspiredHDC.test_quantum_coherence",
        "TestNeuralHDCHybrid.test_hybrid_forward_pass",
        "TestNeuralHDCHybrid.test_association_learning",
        "TestNeuralHDCHybrid.test_association_retrieval",
        "TestNeuralHDCHybrid.test_online_adaptation",
        "TestNeuralHDCHybrid.test_interpretability_analysis",
        "TestAdvancedSymbolicReasoner.test_concept_creation",
        "TestAdvancedSymbolicReasoner.test_rule_creation",
        "TestAdvancedSymbolicReasoner.test_fact_assertion",
        "TestAdvancedSymbolicReasoner.test_forward_reasoning",
        "TestAdvancedSymbolicReasoner.test_backward_reasoning",
        "TestAdvancedSymbolicReasoner.test_uncertainty_handling",
        "TestAdvancedSymbolicReasoner.test_explanation_generation",
        "TestMetaLearningEngine.test_task_creation",
        "TestMetaLearningEngine.test_episode_creation",
        "TestMetaLearningEngine.test_fast_adaptation",
        "TestMetaLearningEngine.test_similar_task_finding",
        "TestMetaLearningEngine.test_performance_tracking",
        "TestIntegrationScenarios.test_multi_modal_symbolic_reasoning",
        "TestIntegrationScenarios.test_quantum_neural_hybrid",
        "TestIntegrationScenarios.test_meta_learning_with_quantum_hdc",
        "TestPerformanceBenchmarks.test_fusion_latency",
        "TestPerformanceBenchmarks.test_quantum_operation_speed",
        "TestPerformanceBenchmarks.test_reasoning_speed",
        "test_modality_encoding",
        "test_multi_modal_fusion",
        "test_adaptive_weighting",
        "test_context_application",
        "test_quantum_state_creation",
        "test_quantum_operations",
        "test_quantum_similarity",
        "test_quantum_measurement",
        "test_quantum_learning",
        "test_quantum_coherence",
        "test_hybrid_forward_pass",
        "test_association_learning",
        "test_association_retrieval",
        "test_online_adaptation",
        "test_interpretability_analysis",
        "test_concept_creation",
        "test_rule_creation",
        "test_fact_assertion",
        "test_forward_reasoning",
        "test_backward_reasoning",
        "test_uncertainty_handling",
        "test_explanation_generation",
        "test_task_creation",
        "test_episode_creation",
        "test_fast_adaptation",
        "test_similar_task_finding",
        "test_performance_tracking",
        "test_multi_modal_symbolic_reasoning",
        "test_quantum_neural_hybrid",
        "test_meta_learning_with_quantum_hdc",
        "test_fusion_latency",
        "test_quantum_operation_speed",
        "test_reasoning_speed"
      ],
      "fixtures": [
        "fusion_engine",
        "quantum_hdc",
        "hybrid_model",
        "reasoner",
        "meta_learner"
      ],
      "total_test_functions": 66
    },
    "test_autonomous_mastery.py": {
      "test_classes": [
        "TestSelfModifyingCode",
        "TestAdaptiveArchitecture",
        "TestComponentTypes",
        "TestIntegrationScenarios",
        "TestPerformanceBenchmarks"
      ],
      "test_methods": [
        "TestSelfModifyingCode.test_function_registration",
        "TestSelfModifyingCode.test_ast_analysis",
        "TestSelfModifyingCode.test_mutation_generation",
        "TestSelfModifyingCode.test_performance_profiling",
        "TestSelfModifyingCode.test_code_evolution",
        "TestSelfModifyingCode.test_safety_mechanisms",
        "TestSelfModifyingCode.test_code_deployment",
        "TestSelfModifyingCode.test_function_generation",
        "TestSelfModifyingCode.test_optimization_report",
        "TestAdaptiveArchitecture.test_component_registration",
        "TestAdaptiveArchitecture.test_component_connections",
        "TestAdaptiveArchitecture.test_topology_optimization",
        "TestAdaptiveArchitecture.test_resource_allocation",
        "TestAdaptiveArchitecture.test_system_monitoring",
        "TestAdaptiveArchitecture.test_adaptation_triggers",
        "TestAdaptiveArchitecture.test_load_balancing_adaptation",
        "TestAdaptiveArchitecture.test_architecture_persistence",
        "TestAdaptiveArchitecture.test_performance_tracking",
        "TestComponentTypes.test_component_utilization",
        "TestComponentTypes.test_component_adaptation_history",
        "TestIntegrationScenarios.test_self_modifying_with_adaptive_architecture",
        "TestIntegrationScenarios.test_end_to_end_autonomous_optimization",
        "TestPerformanceBenchmarks.test_code_analysis_speed",
        "TestPerformanceBenchmarks.test_architecture_adaptation_speed",
        "test_function_registration",
        "test_ast_analysis",
        "test_mutation_generation",
        "test_performance_profiling",
        "test_code_evolution",
        "test_safety_mechanisms",
        "test_code_deployment",
        "test_function_generation",
        "test_optimization_report",
        "test_component_registration",
        "test_component_connections",
        "test_topology_optimization",
        "test_resource_allocation",
        "test_system_monitoring",
        "test_adaptation_triggers",
        "test_load_balancing_adaptation",
        "test_architecture_persistence",
        "test_performance_tracking",
        "test_component_utilization",
        "test_component_adaptation_history",
        "test_self_modifying_with_adaptive_architecture",
        "test_end_to_end_autonomous_optimization",
        "test_code_analysis_speed",
        "test_architecture_adaptation_speed",
        "test_func"
      ],
      "fixtures": [
        "code_engine",
        "sample_function",
        "architecture_manager"
      ],
      "total_test_functions": 49
    },
    "test_comprehensive_quality_gates.py": {
      "test_classes": [],
      "test_methods": [
        "test_comprehensive_quality_gates",
        "test_hypervector_operations",
        "test_adaptive_learning",
        "test_sensor_fusion",
        "test_performance_benchmarks"
      ],
      "fixtures": [],
      "total_test_functions": 5
    },
    "test_hdc_comprehensive.py": {
      "test_classes": [
        "TestHyperVector",
        "TestHDCOperations",
        "TestAssociativeMemory",
        "TestErrorHandling",
        "TestSecurity",
        "TestPerformance",
        "TestFaultTolerance",
        "TestThreadSafety"
      ],
      "test_methods": [
        "TestHyperVector.test_creation",
        "TestHyperVector.test_random_creation",
        "TestHyperVector.test_bundling",
        "TestHyperVector.test_binding",
        "TestHyperVector.test_similarity",
        "TestHyperVector.test_permutation",
        "TestHyperVector.test_serialization",
        "TestHyperVector.test_error_conditions",
        "TestHDCOperations.test_majority_bundle",
        "TestHDCOperations.test_weighted_bundle",
        "TestHDCOperations.test_similarity_measures",
        "TestHDCOperations.test_basis_vectors",
        "TestAssociativeMemory.test_store_and_retrieve",
        "TestAssociativeMemory.test_query_by_similarity",
        "TestAssociativeMemory.test_best_match",
        "TestAssociativeMemory.test_memory_management",
        "TestAssociativeMemory.test_batch_operations",
        "TestAssociativeMemory.test_persistence",
        "TestErrorHandling.test_dimension_validation",
        "TestErrorHandling.test_hypervector_validation",
        "TestErrorHandling.test_error_recovery",
        "TestErrorHandling.test_robust_operation_decorator",
        "TestSecurity.test_input_sanitization",
        "TestSecurity.test_access_control",
        "TestSecurity.test_security_manager_integration",
        "TestSecurity.test_rate_limiting",
        "TestPerformance.test_vector_operations_performance",
        "TestPerformance.test_memory_performance",
        "TestFaultTolerance.test_noise_resilience",
        "TestFaultTolerance.test_dimension_robustness",
        "TestFaultTolerance.test_memory_corruption_recovery",
        "TestThreadSafety.test_concurrent_memory_access",
        "TestThreadSafety.test_concurrent_vector_operations",
        "test_creation",
        "test_random_creation",
        "test_bundling",
        "test_binding",
        "test_similarity",
        "test_permutation",
        "test_serialization",
        "test_error_conditions",
        "test_majority_bundle",
        "test_weighted_bundle",
        "test_similarity_measures",
        "test_basis_vectors",
        "test_store_and_retrieve",
        "test_query_by_similarity",
        "test_best_match",
        "test_memory_management",
        "test_batch_operations",
        "test_persistence",
        "test_dimension_validation",
        "test_hypervector_validation",
        "test_error_recovery",
        "test_robust_operation_decorator",
        "test_input_sanitization",
        "test_access_control",
        "test_security_manager_integration",
        "test_rate_limiting",
        "test_vector_operations_performance",
        "test_memory_performance",
        "test_noise_resilience",
        "test_dimension_robustness",
        "test_memory_corruption_recovery",
        "test_concurrent_memory_access",
        "test_concurrent_vector_operations"
      ],
      "fixtures": [],
      "total_test_functions": 66
    },
    "test_pipeline_guard.py": {
      "test_classes": [
        "TestPipelineGuardCore",
        "TestAnomalyDetection",
        "TestFailurePrediction",
        "TestAutomatedRepair",
        "TestPipelineMonitoring",
        "TestIntegrationScenarios",
        "TestErrorHandling",
        "TestPerformance"
      ],
      "test_methods": [
        "TestPipelineGuardCore.test_guard_initialization",
        "TestPipelineGuardCore.test_pipeline_registration",
        "TestPipelineGuardCore.test_pipeline_health_assessment",
        "TestPipelineGuardCore.test_guard_summary",
        "TestPipelineGuardCore.test_alert_generation",
        "TestPipelineGuardCore.test_monitoring_lifecycle",
        "TestAnomalyDetection.test_anomaly_detector_initialization",
        "TestAnomalyDetection.test_statistical_anomaly_detection",
        "TestAnomalyDetection.test_pattern_based_anomaly_detection",
        "TestAnomalyDetection.test_temporal_anomaly_detection",
        "TestFailurePrediction.test_failure_predictor_initialization",
        "TestFailurePrediction.test_trend_based_prediction",
        "TestFailurePrediction.test_resource_based_prediction",
        "TestFailurePrediction.test_failure_recording",
        "TestAutomatedRepair.test_alert",
        "TestAutomatedRepair.test_auto_repair_initialization",
        "TestAutomatedRepair.test_repair_engine_selection",
        "TestAutomatedRepair.test_repair_action_generation",
        "TestAutomatedRepair.test_repair_action_scoring",
        "TestAutomatedRepair.test_repair_attempt_execution",
        "TestAutomatedRepair.test_repair_cooldown_mechanism",
        "TestAutomatedRepair.test_repair_statistics",
        "TestPipelineMonitoring.test_monitor_initialization",
        "TestPipelineMonitoring.test_collector_registration",
        "TestPipelineMonitoring.test_metrics_collection",
        "TestPipelineMonitoring.test_metrics_processing",
        "TestPipelineMonitoring.test_pipeline_summary",
        "TestPipelineMonitoring.test_monitoring_lifecycle",
        "TestPipelineMonitoring.test_system_metrics_collector",
        "TestIntegrationScenarios.test_complete_monitoring_cycle",
        "TestIntegrationScenarios.test_end_to_end_repair_scenario",
        "TestErrorHandling.test_invalid_configuration",
        "TestErrorHandling.test_missing_metrics_data",
        "TestErrorHandling.test_collector_failures",
        "TestErrorHandling.test_repair_engine_failures",
        "test_config",
        "TestPerformance.test_large_metrics_processing",
        "TestPerformance.test_memory_usage_with_long_running",
        "test_guard_initialization",
        "test_pipeline_registration",
        "test_pipeline_health_assessment",
        "test_guard_summary",
        "test_alert_generation",
        "test_monitoring_lifecycle",
        "test_anomaly_detector_initialization",
        "test_statistical_anomaly_detection",
        "test_pattern_based_anomaly_detection",
        "test_temporal_anomaly_detection",
        "test_failure_predictor_initialization",
        "test_trend_based_prediction",
        "test_resource_based_prediction",
        "test_failure_recording",
        "test_alert",
        "test_auto_repair_initialization",
        "test_repair_engine_selection",
        "test_repair_action_generation",
        "test_repair_action_scoring",
        "test_repair_attempt_execution",
        "test_repair_cooldown_mechanism",
        "test_repair_statistics",
        "test_monitor_initialization",
        "test_collector_registration",
        "test_metrics_collection",
        "test_metrics_processing",
        "test_pipeline_summary",
        "test_monitoring_lifecycle",
        "test_system_metrics_collector",
        "test_complete_monitoring_cycle",
        "test_end_to_end_repair_scenario",
        "test_invalid_configuration",
        "test_missing_metrics_data",
        "test_collector_failures",
        "test_repair_engine_failures",
        "test_large_metrics_processing",
        "test_memory_usage_with_long_running"
      ],
      "fixtures": [
        "pipeline_guard",
        "anomaly_detector",
        "sample_metrics",
        "failure_predictor",
        "auto_repair",
        "test_alert",
        "pipeline_monitor",
        "mock_collector",
        "integrated_system"
      ],
      "total_test_functions": 75
    }
  },
  "performance_analysis": {
    "multi_modal_fusion": {
      "nested_loop_count": 3,
      "recursive_functions": 0,
      "large_data_structures": [
        "np.zeros",
        "torch.zeros",
        "np.ones",
        "torch.ones",
        "np.random",
        "batch_size",
        "hidden_dim"
      ],
      "optimization_indicators": [
        "parallel",
        "optimize",
        "batch",
        "performance"
      ],
      "memory_usage_indicators": [
        "del ",
        "clear()"
      ]
    },
    "quantum_hdc": {
      "nested_loop_count": 0,
      "recursive_functions": 0,
      "large_data_structures": [
        "np.zeros",
        "np.random"
      ],
      "optimization_indicators": [
        "optimize",
        "performance"
      ],
      "memory_usage_indicators": []
    },
    "self_modifying_code": {
      "nested_loop_count": 5,
      "recursive_functions": 1,
      "large_data_structures": [],
      "optimization_indicators": [
        "vectorization",
        "parallel",
        "multiprocessing",
        "cache",
        "lru_cache",
        "optimize",
        "performance"
      ],
      "memory_usage_indicators": [
        "memory_usage",
        "memory_delta",
        "psutil.Process",
        "memory_info"
      ]
    }
  },
  "summary_statistics": {
    "file_completeness": {
      "total_expected_files": 17,
      "existing_files": 17,
      "completeness_percentage": 100.0
    },
    "syntax_quality": {
      "total_python_files": 82,
      "syntactically_valid_files": 82,
      "syntax_success_rate": 100.0
    },
    "code_metrics": {
      "total_functions": 144,
      "total_classes": 29,
      "total_lines_of_code": 3497,
      "average_doc_ratio": 0.2186887036293697
    },
    "test_metrics": {
      "total_test_files": 5,
      "total_test_functions": 261,
      "total_test_classes": 28
    },
    "performance_metrics": {
      "algorithms_analyzed": 3,
      "optimization_patterns_detected": 13
    }
  }
}